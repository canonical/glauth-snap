From a619ea438baf450dda9cf48c9cc478fd8ccb6b3d Mon Sep 17 00:00:00 2001
From: Billy Olsen <billy.olsen@canonical.com>
Date: Wed, 23 Aug 2023 15:00:36 -0700
Subject: [PATCH] Special case the groups table for mysql backend.

groups is a reserved keyword for mysql/mariadb. This checks the
backend database driver and escapes the groups table name if the
mysql driver is used.

Signed-off-by: Billy Olsen <billy.olsen@canonical.com>

diff --git a/v2/pkg/plugins/basesqlhandler.go b/v2/pkg/plugins/basesqlhandler.go
index efff83c..b88b063 100644
--- a/v2/pkg/plugins/basesqlhandler.go
+++ b/v2/pkg/plugins/basesqlhandler.go
@@ -183,8 +183,13 @@ func (h databaseHandler) FindGroup(groupName string) (f bool, g config.Group, er
 	group := config.Group{}
 	found := false
 
+	var groups_table = "groups"
+	if h.sqlBackend.GetDriverName() == "mysql" {
+		groups_table = "`groups`"
+	}
+
 	err = h.database.cnx.QueryRow(fmt.Sprintf(`
-			SELECT g.gidnumber FROM groups g WHERE lower(name)=%s`, h.sqlBackend.GetPrepareSymbol()), groupName).Scan(
+			SELECT g.gidnumber FROM %s g WHERE lower(name)=%s`, groups_table, h.sqlBackend.GetPrepareSymbol()), groupName).Scan(
 		&group.GIDNumber)
 	if err == nil {
 		found = true
@@ -312,11 +317,15 @@ func (h databaseHandler) commaListToStringTable(commaList string) []string {
 
 func (h databaseHandler) memoizeGroups() ([]config.Group, error) {
 	workMemGroups := make([]*config.Group, 0)
-	rows, err := h.database.cnx.Query(`
+	var groups_table = "groups"
+	if h.sqlBackend.GetDriverName() == "mysql" {
+		groups_table = "`groups`"
+	}
+	rows, err := h.database.cnx.Query(fmt.Sprintf(`
 		SELECT g1.name,g1.gidnumber,ig.includegroupid
-		FROM groups g1 
+		FROM %s g1
 		LEFT JOIN includegroups ig ON g1.gidnumber=ig.parentgroupid 
-		LEFT JOIN groups g2 ON ig.includegroupid=g2.gidnumber`)
+		LEFT JOIN %s g2 ON ig.includegroupid=g2.gidnumber`, groups_table, groups_table))
 	if err != nil {
 		return nil, errors.New("Unable to memoize groups list")
 	}
-- 
2.39.2

