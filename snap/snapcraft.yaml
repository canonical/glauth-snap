name: glauth
base: core22
adopt-info: glauth
version: git
summary: A lightweight LDAP server for development, home use, or CI
description: "Go-lang LDAP Authentication (GLAuth) is a secure, easy-to-use,\n LDAP\
  \ server w/ configurable backends.\n\nCentrally manage accounts across your infrastructure.\n\
  Centrally manage SSH keys, Linux accounts, and passwords for cloud servers.\nLightweight\
  \ alternative to OpenLDAP and Active Directory for development, or\n a homelab.\n\
  Store your user directory in a file, local or in S3; SQL database; or proxy\n to\
  \ existing LDAP servers.\nTwo Factor Authentication (transparent to applications).\n\
  Multiple backends can be chained to inject features.\nUse it to centralize account\
  \ management across your Linux servers, your OSX\n machines, and your support applications\
  \ (Jenkins, Apache/Nginx, Graylog2,\n  and many more!).\n"
license: Apache-2.0
website: https://glauth.github.io/
grade: stable
confinement: strict
apps:
  glauth:
    environment:
      CERT: $SNAP_COMMON/etc/glauth/certs.d/glauth.crt
      KEY: $SNAP_COMMON/etc/glauth/keys.d/glauth.key
      CONFIG: $SNAP_COMMON/etc/glauth/glauth.d
    command: bin/glauth -c $CONFIG --ldaps-key $KEY --ldaps-cert $CERT
    daemon: simple
    install-mode: disable
    plugs:
      - home
      - network
      - network-bind
parts:
  glauth:
    plugin: make
    build-snaps:
      - go
    source-subdir: v2
    source-type: git
    source: https://github.com/glauth/glauth
    source-branch: master
    override-pull: |
      craftctl default
      
      # Pull necessary plugins for backend sql databases.
      need_update=false
      for plugin in sqlite mysql postgres
      do
          if [ ! -d "$CRAFT_PART_SRC_WORK/pkg/plugins/glauth-$plugin" ]
          then
              # Pull in the plugins
              make -C $CRAFT_PART_SRC_WORK pull-plugin U=https://github.com/glauth/glauth-$plugin M=pkg/plugins/glauth-$plugin
          else
              echo "Plugin $plugin already exists. submodule update needed."
              need_update=true
          fi
      done

      # Apply local patches
      for patch in `ls -1 $CRAFT_PROJECT_DIR/patches/*.patch`
      do
          echo "Applying patch $patch..."
          git -C $CRAFT_PART_SRC_WORK apply $patch
      done

    override-build: |
      # Set the version of the snap
      craftctl set version="$(git describe)"

      # Build GLAuth

      # plugin_pam fails so leaving that out

      make -C $CRAFT_PART_SRC_WORK -j$CRAFT_PARALLEL_BUILD_COUNT plugin_postgres plugin_mysql plugin_sqlite fast


      # Grab built binary

      mkdir -p $CRAFT_PART_INSTALL/bin
      cp $CRAFT_PART_SRC_WORK/bin/linux$CRAFT_TARGET_ARCH/glauth $CRAFT_PART_INSTALL/bin/
      
      # Copy the plugin .so files to the lib directory
      mkdir -p $CRAFT_PART_INSTALL/lib/glauth
      cp $CRAFT_PART_SRC_WORK/bin/linux$CRAFT_TARGET_ARCH/*.so $CRAFT_PART_INSTALL/lib/glauth/

