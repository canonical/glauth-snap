# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

name: glauth snap tests
on:
  workflow_call:
  pull_request:

jobs:
  inclusive-naming-check:
    name: Inclusive naming check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: woke
        uses: get-woke/woke-action@v0
        with:
          # Cause the check to fail on any broke rules
          fail-on-error: true

  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python3 -m pip install tox
      - name: Run linters
        run: tox -e lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    needs:
      - inclusive-naming-check
      - lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python3 -m pip install tox
      - name: Build snap locally
        uses: snapcore/action-build@v1
        id: snapcraft
      - name: Setup LXD
        uses: canonical/setup-lxd@ea57509243d3cf39f8ab926e021bb353947b01b5
      - name: Run tests
        run: tox -e unit

  build:
    name: Build snap
    runs-on: ubuntu-latest
    needs:
      - inclusive-naming-check
      - lint
    outputs:
      snap: ${{ steps.snapcraft.outputs.snap }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build snap locally
        uses: snapcore/action-build@v1
        id: snapcraft

      - name: Upload locally built snap artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.snapcraft.outputs.snap }}
          path: ${{ steps.snapcraft.outputs.snap }}

  function-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        plugin: 
        - mysql
        - sqlite
        - postgres
    timeout-minutes: 5
    needs: 
      - build
    services:
      mysql:
        image: ubuntu/mysql
        env:
          MYSQL_USER: glauth
          MYSQL_PASSWORD: glauth
          MYSQL_DATABASE: glauth
          MYSQL_ROOT_PASSWORD: glauth
        ports: 
          - 3306:3306
      postgres:
        image: ubuntu/postgres
        env:
          POSTGRES_PASSWORD: glauth
          POSTGRES_USER: glauth
          POSTGRES_DB: glauth
        ports: 
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch built snap
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.snap }}

      - name: Install snap and try itout
        run: |
          sudo snap install --dangerous ${{ needs.build.outputs.snap }}
          sudo mv ${{ github.workspace }}/tests/ci/config.${{ matrix.plugin }}.cfg /var/snap/glauth/common/etc/glauth/glauth.d/config.cfg
          sudo snap start glauth
          status=$?
          sudo snap logs glauth
          echo $status

      - name: Seed MySQL
        if: matrix.plugin == 'mysql'
        run: |
          sudo apt install -y mysql-client
          sudo snap logs glauth
          mysql --host 0.0.0.0 --port 3306 -uglauth -pglauth -Dglauth < tests/ci/seed.${{ matrix.plugin }}.sql 

      - name: Seed PSQL
        if: matrix.plugin == 'postgres'
        run: |
          sudo apt install -y postgresql-client
          sudo snap logs glauth
          psql postgresql://glauth:glauth@127.0.0.1:5432/glauth?sslmode=disable -f tests/ci/seed.${{ matrix.plugin }}.sql

      - name: Seed SQLite
        if: matrix.plugin == 'sqlite'
        run: |
          sudo apt install -y sqlite3
          sudo sqlite3 /var/snap/glauth/current/glauth.db < tests/ci/seed.postgres.sql

      - name: Check LDAP apis
        run: |
          sudo apt install -y ldap-utils
          ldapsearch -LLL -Hldap://localhost:3893 -D cn=serviceuser,ou=svcaccts,dc=glauth,dc=com -w mysecret -x -bdc=glauth,dc=com cn=hackers
